#include <GL/glut.h>
#include <cmath>
void drawLine(int x1, int y1, int x2, int y2)
{
    float dx, dy, steps, xi, yi, x, y;
    dx = x2 - x1;
    dy = y2 - y1;
    if (fabs(dx) > fabs(dy))
        steps = fabs(dx);
    else
        steps = fabs(dy);

    xi = dx / steps;
    yi = dy / steps;

    x = x1;
    y = y1;

    glBegin(GL_POINTS);
    glVertex2i(round(x), round(y));

    for (int k = 0; k < steps; k++)
    {
        x += xi;
        y += yi;
        glVertex2i(round(x), round(y));
    }
    glEnd();
}
void display()
{
    glClear(GL_COLOR_BUFFER_BIT);
    drawLine(20, 100, 70, 30);
    drawLine(70, 30, 120, 100);
    drawLine(20, 100, 120, 100);
    glFlush();
}
void init()
{
    glClearColor(0.0, 0.0, 0.0, 1.0);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    glOrtho(0.0, 640.0, 0.0, 480.0, -1.0, 1.0);
}

int main(int argc, char **argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(640, 480);
    glutCreateWindow("OpenGL Triangle Drawing using dda");
    init();
    display();
    return 0;
}
