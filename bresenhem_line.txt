#include <iostream>
#include <GL/glut.h>

using namespace std;
int x1, y1, x2, y2;

void init() {
    glClearColor(0.0, 0.0, 0.0, 1.0);
    glColor3f(1.0, 1.0, 1.0);
    glMatrixMode(GL_PROJECTION);
    gluOrtho2D(0, 500, 0, 500);
}

void draw_pixel(int x, int y){
    glBegin(GL_POINTS);
    glVertex2i(x, y);

}

void bresenhamLine(int x1, int y1, int x2, int y2) {
    int dx = (x2 - x1);
    int dy = (y2 - y1);

    int p = 2*dy - dx;

    int x = x1;
    int y = y1;

    while (true) {
        glVertex2i(x, y);

        if (x == x2 && y == y2) break;

        if(p < 0){
            p += 2*dy;
        }
        else{
            y++;
            p = p + (2*dy - 2*dx);
        }
        x++;
    }
}

void display(){
    glClear(GL_COLOR_BUFFER_BIT);
    glBegin(GL_POINTS);
    bresenhamLine(x1, y1, x2, y2);
    glEnd();
    glFlush();
}

int main(int argc, char** argv)
{

    cout << "Enter starting point (x1, y1): ";
    cin >> x1 >> y1;
    cout << "Enter ending point (x2, y2): ";
    cin >> x2 >> y2;

    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(500, 500);
    glutCreateWindow("Line draw");
    init();
    glutDisplayFunc(display);
    glutMainLoop();

    return 0;
}
